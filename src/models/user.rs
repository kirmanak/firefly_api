/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// The new users email address.
    #[serde(rename = "email")]
    pub email: String,
    /// Boolean to indicate if the user is blocked.
    #[serde(rename = "blocked", skip_serializing_if = "Option::is_none")]
    pub blocked: Option<bool>,
    /// If you say the user must be blocked, this will be the reason code.
    #[serde(rename = "blocked_code", skip_serializing_if = "Option::is_none")]
    pub blocked_code: Option<BlockedCode>,
    /// Role for the new user. Can be empty or omitted.
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<Role>,
}

impl User {
    pub fn new(email: String) -> User {
        User {
            created_at: None,
            updated_at: None,
            email,
            blocked: None,
            blocked_code: None,
            role: None,
        }
    }
}

/// If you say the user must be blocked, this will be the reason code.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BlockedCode {
    #[serde(rename = "email_changed")]
    EmailChanged,
}
/// Role for the new user. Can be empty or omitted.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "owner")]
    Owner,
    #[serde(rename = "demo")]
    Demo,
}

