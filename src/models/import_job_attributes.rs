/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportJobAttributes {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// ID of the tag related to the import job, if present.
    #[serde(rename = "tag_id", skip_serializing_if = "Option::is_none")]
    pub tag_id: Option<i32>,
    /// Tag related to the import job, if present.
    #[serde(rename = "tag_tag", skip_serializing_if = "Option::is_none")]
    pub tag_tag: Option<String>,
    /// Import job unique identifier.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// File type, if relevant.
    #[serde(rename = "file_type", skip_serializing_if = "Option::is_none")]
    pub file_type: Option<String>,
    /// Import provider that did the import.
    #[serde(rename = "provider", skip_serializing_if = "Option::is_none")]
    pub provider: Option<String>,
    /// Status of import job.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Current stage.
    #[serde(rename = "stage", skip_serializing_if = "Option::is_none")]
    pub stage: Option<String>,
    /// JSON string with job-specific configuration.
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    /// JSON string with job-specific status.
    #[serde(rename = "extended_status", skip_serializing_if = "Option::is_none")]
    pub extended_status: Option<String>,
    /// JSON string with a count of transactions in the job.
    #[serde(rename = "transactions", skip_serializing_if = "Option::is_none")]
    pub transactions: Option<String>,
    /// JSON string with a list of errors.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<String>,
}

impl ImportJobAttributes {
    pub fn new() -> ImportJobAttributes {
        ImportJobAttributes {
            created_at: None,
            updated_at: None,
            tag_id: None,
            tag_tag: None,
            key: None,
            file_type: None,
            provider: None,
            status: None,
            stage: None,
            configuration: None,
            extended_status: None,
            transactions: None,
            errors: None,
        }
    }
}


