/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Budget {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
    /// The type of auto-budget that Firefly III must create.
    #[serde(rename = "auto_budget_type", skip_serializing_if = "Option::is_none")]
    pub auto_budget_type: Option<AutoBudgetType>,
    /// Use either currency_id or currency_code. Defaults to the user's default currency.
    #[serde(rename = "auto_budget_currency_id", skip_serializing_if = "Option::is_none")]
    pub auto_budget_currency_id: Option<i32>,
    /// Use either currency_id or currency_code. Defaults to the user's default currency.
    #[serde(rename = "auto_budget_currency_code", skip_serializing_if = "Option::is_none")]
    pub auto_budget_currency_code: Option<String>,
    #[serde(rename = "auto_budget_amount", skip_serializing_if = "Option::is_none")]
    pub auto_budget_amount: Option<String>,
    /// Period for the auto budget
    #[serde(rename = "auto_budget_period", skip_serializing_if = "Option::is_none")]
    pub auto_budget_period: Option<AutoBudgetPeriod>,
    /// Information on how much was spent in this budget. Is only filled in when the start and end date are submitted.
    #[serde(rename = "spent", skip_serializing_if = "Option::is_none")]
    pub spent: Option<Vec<crate::models::BudgetSpent>>,
}

impl Budget {
    pub fn new(name: String) -> Budget {
        Budget {
            created_at: None,
            updated_at: None,
            name,
            active: None,
            order: None,
            auto_budget_type: None,
            auto_budget_currency_id: None,
            auto_budget_currency_code: None,
            auto_budget_amount: None,
            auto_budget_period: None,
            spent: None,
        }
    }
}

/// The type of auto-budget that Firefly III must create.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutoBudgetType {
    #[serde(rename = "reset")]
    Reset,
    #[serde(rename = "rollover")]
    Rollover,
    #[serde(rename = "none")]
    None,
}
/// Period for the auto budget
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutoBudgetPeriod {
    #[serde(rename = "daily")]
    Daily,
    #[serde(rename = "weekly")]
    Weekly,
    #[serde(rename = "monthly")]
    Monthly,
    #[serde(rename = "quarterly")]
    Quarterly,
    #[serde(rename = "half_year")]
    HalfYear,
    #[serde(rename = "yearly")]
    Yearly,
}

