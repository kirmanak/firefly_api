/*
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: james@firefly-iii.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Transaction {
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    /// User ID
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<i32>,
    /// Break if the submitted transaction exists already.
    #[serde(rename = "error_if_duplicate_hash", skip_serializing_if = "Option::is_none")]
    pub error_if_duplicate_hash: Option<bool>,
    /// Whether or not to apply rules when submitting transaction.
    #[serde(rename = "apply_rules", skip_serializing_if = "Option::is_none")]
    pub apply_rules: Option<bool>,
    /// Title of the transaction if it has been split in more than one piece. Empty otherwise.
    #[serde(rename = "group_title", skip_serializing_if = "Option::is_none")]
    pub group_title: Option<String>,
    #[serde(rename = "transactions")]
    pub transactions: Vec<crate::models::TransactionSplit>,
}

impl Transaction {
    pub fn new(transactions: Vec<crate::models::TransactionSplit>) -> Transaction {
        Transaction {
            created_at: None,
            updated_at: None,
            user: None,
            error_if_duplicate_hash: None,
            apply_rules: None,
            group_title: None,
            transactions,
        }
    }
}


